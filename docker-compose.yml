
services:
  redis:
    image: redis:7
    networks:
      - backend
    volumes:
      - redis-data:/data

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  tusd:
    image: tusproject/tusd:latest
    command: ["/tusd", "-upload-dir", "/uploads"]
    ports:
      - "1080:1080"
    volumes:
      - uploads:/uploads
    networks:
      - backend

  insightface-rest:
    image: jasongwq/insightface-rest:v0.6.0.0-cpu  # public, CPU-only
    ports:
      - "18081:18081"
    restart:
      unless-stopped
    networks:
      - backend

  fastapi-api:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
      - ./config.yaml:/app/config.yaml
      - uploads:/uploads
      - sessions:/sessions
    depends_on:
      - redis
      - tusd
      - insightface-rest
      - db
    networks:
      - backend
    ports:
      - "8000:8000"
    env_file:
      - .env

  worker:
    build:
      context: .
      target: worker
    command: celery -A app.utils.whisper_worker.celery_app worker --loglevel=info
    volumes:
      - .:/worker
      - ./config.yaml:/worker/config.yaml
      - uploads:/uploads
      - sessions:/sessions
    depends_on:
      - redis
      - fastapi-api
      - insightface-rest
      - db
    networks:
      - backend
    env_file:
      - .env

  flower:
    image: mher/flower:latest
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    depends_on:
      - redis
    networks:
      - backend
    ports:
      - "5555:5555"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

volumes:
  uploads:
  sessions:
  redis-data:
  postgres-data:

networks:
  backend:
